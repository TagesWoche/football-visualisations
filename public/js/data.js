// Generated by CoffeeScript 1.3.3
(function() {

  this.tageswoche = this.tageswoche || {};

  tageswoche.data = (function() {
    var specialConditionsAttr;
    specialConditionsAttr = {
      "fd": "directFreeKick",
      "fi": "indirectFreeKick",
      "e": "corner",
      "p": "penalty",
      "ps": "penaltyShootout",
      "ew": "throwIn",
      "f": "foul"
    };
    return {
      scenes: void 0,
      games: {},
      current: -1,
      getStartDate: function(date) {
        return date = '2013-05-12';
      },
      formatDate: function(dateString) {
        var date, day, month, year;
        date = new Date(dateString);
        year = date.getFullYear();
        month = date.getMonth() + 1;
        day = date.getDate();
        if (month < 10) {
          month = "0" + month;
        }
        if (day < 10) {
          day = "0" + day;
        }
        return "" + year + "-" + month + "-" + day;
      },
      addSceneToGame: function(scene) {
        var game, _base, _name, _ref;
        game = (_ref = (_base = this.games)[_name = scene.date]) != null ? _ref : _base[_name] = [];
        this.scenes.push(scene);
        return game.push(this.scenes.length - 1);
      },
      firstScene: function() {
        var game, lastScene;
        lastScene = this.scenes[this.scenes.length - 1];
        game = this.games[lastScene.date];
        this.current = game[0];
        return this.scenes[this.current];
      },
      findScene: function(date) {
        var game;
        game = this.games[date];
        if (game) {
          this.current = game[0];
          return this.scenes[this.current];
        }
      },
      nextScene: function() {
        if (!this.isLastScene()) {
          this.current += 1;
        }
        return this.scenes[this.current];
      },
      isLastScene: function() {
        return this.current === (this.scenes.length - 1);
      },
      previousScene: function() {
        if (!this.isFirstScene()) {
          this.current -= 1;
        }
        return this.scenes[this.current];
      },
      isFirstScene: function() {
        return this.current === 0;
      },
      getScene: function(index) {
        if (0 <= index && index < this.scenes.length) {
          return this.scenes[index];
        }
      },
      gotoScene: function(index) {
        var scene;
        if (scene = this.getScene(index)) {
          this.current = index;
          return scene;
        }
      },
      nextGameScene: function() {
        var game, lastScene, nextScene;
        game = this.games[this.scenes[this.current].date];
        lastScene = game[game.length - 1];
        if (nextScene = this.getScene(lastScene + 1)) {
          return {
            scene: nextScene,
            index: lastScene + 1
          };
        }
      },
      previousGameScene: function() {
        var firstScene, game, lastScenePrevGame, prevGame;
        game = this.games[this.scenes[this.current].date];
        firstScene = game[0];
        if (lastScenePrevGame = this.getScene(firstScene - 1)) {
          prevGame = this.games[lastScenePrevGame.date];
          return {
            scene: this.scenes[prevGame[0]],
            index: prevGame[0]
          };
        }
      },
      loadScenes: function(callback) {
        var _this = this;
        if (this.scenes) {
          callback(void 0, this.scenes);
          return;
        }
        $.ajax({
          url: "http://tageswoche.herokuapp.com/fcb/situations",
          dataType: "jsonp"
        }).done(function(data) {
          var action, entry, scene, scorePositionParts, _i, _j, _len, _len1, _ref;
          data = data.list;
          _this.scenes = [];
          for (_i = 0, _len = data.length; _i < _len; _i++) {
            entry = data[_i];
            if (!/g:/i.test(entry.scorePosition)) {
              _ref = entry.playerPositions;
              for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
                action = _ref[_j];
                if (action.specialCondition) {
                  action[specialConditionsAttr[action.specialCondition.toLowerCase()]] = true;
                }
              }
              scene = {
                actions: entry.playerPositions,
                score: entry.score,
                minute: entry.minute,
                opponent: entry.opponent,
                team: entry.team,
                home: entry.homematch,
                date: _this.formatDate(entry.date),
                competition: entry.competition,
                scorePosition: entry.scorePosition
              };
              if (entry.scorePosition) {
                scorePositionParts = /(g:)?([ou])([mlr])/i.exec(entry.scorePosition);
                if (scorePositionParts) {
                  if (scorePositionParts[2].toLowerCase() === "o") {
                    scene.highKick = true;
                  } else {
                    scene.lowKick = true;
                  }
                }
              }
              _this.addSceneToGame(scene);
            }
          }
          return callback(void 0, _this.scenes);
        });
      },
      loadScenesFake: function(callback) {
        var data, entry, newData;
        data = [
          {
            score: "1:0",
            minute: 85,
            date: "01.06.2012",
            opponent: "GC",
            team: "FCB",
            home: true,
            tournament: "l",
            scorePosition: "OM",
            actions: [
              {
                name: "Stocker",
                number: 5,
                positions: ["H1"]
              }, {
                name: "Park",
                number: 8,
                positions: ["E1", "C10"]
              }, {
                name: "Streller",
                number: 10,
                positions: ["E9", "A8"]
              }, {
                name: "D. Degen",
                number: 7,
                positions: ["C7"]
              }
            ]
          }, {
            score: "2:0",
            minute: 86,
            date: "01.06.2012",
            opponent: "GC",
            team: "FCB",
            home: true,
            tournament: "l",
            scorePosition: "UL",
            actions: [
              {
                name: "Frei",
                number: 11,
                positions: ["H4", "F4"]
              }, {
                name: "Park",
                number: 8,
                positions: ["E6"]
              }, {
                name: "Frei",
                number: 11,
                positions: ["C5"]
              }
            ]
          }, {
            score: "1:0",
            minute: 14,
            date: "01.07.2012",
            opponent: "Servette",
            team: "FCB",
            home: true,
            tournament: "l",
            scorePosition: "UL",
            actions: [
              {
                name: "Frei",
                number: 11,
                positions: ["H6"]
              }, {
                name: "Park",
                number: 8,
                positions: ["E5", "E4"]
              }, {
                name: "Frei",
                number: 11,
                positions: ["C3"]
              }
            ]
          }
        ];
        this.scenes = data;
        this.games = {};
        newData = (function() {
          var _i, _len, _results;
          _results = [];
          for (_i = 0, _len = data.length; _i < _len; _i++) {
            entry = data[_i];
            _results.push(this.addSceneToGame(entry));
          }
          return _results;
        }).call(this);
        return callback(void 0, data);
      }
    };
  })();

}).call(this);
